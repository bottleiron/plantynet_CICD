# GitHub Actions 워크플로우의 이름을 정의합니다.
name: Build and Deploy

# 워크플로우가 언제 실행될지 정의합니다.
on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때마다 워크플로우가 실행됩니다.

# 워크플로우의 작업들을 정의합니다.
jobs:
  build:
    # 이 작업이 실행될 환경을 정의합니다. 여기서는 최신 버전의 Ubuntu를 사용합니다.
    runs-on: ubuntu-latest  # GitHub이 제공하는 최신 Ubuntu 환경에서 작업을 실행합니다.

    steps:
    # 워크플로우에서 실행할 스텝들을 정의합니다.
    - name: Checkout code
      # GitHub의 공식 액션을 사용하여 코드 저장소에서 소스 코드를 체크아웃합니다.
      uses: actions/checkout@v3  # 코드 저장소에서 소스 코드를 가져옵니다.

    - name: Set up JDK 17
      # GitHub의 공식 액션을 사용하여 JDK 17을 설정합니다.
      uses: actions/setup-java@v3
      with:
        java-version: '17'  # JDK 17을 설치합니다.
        distribution: 'temurin'  # Temurin(OpenJDK 기반) 배포판을 사용합니다.

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.5
    
    - name: Check gradle version
      run: gradle --version
      
    - name: Build with Gradle
      run: |
            cd ./plantynet_CICD_TEST
            gradle bootJar  # Gradle 명령어 사용

    - name: Deploy Prod use SCP GOGOGO
      uses: appleboy/scp-action@master
      with:
       username: ${{ secrets.SSH_USERNAME }}
       host: ${{ secrets.HOST }}
       key: ${{ secrets.PRIVATE_KEY }}
       source: "./build/libs/*.war"
       target: "/home/bottleiron_h/app"
       strip_components: 2
      
    - name: Deploy to Server
      # SSH를 통해 배포 서버에 애플리케이션을 배포합니다.
      uses: appleboy/ssh-action@v0.1.5  # SSH 액션을 사용하여 배포 서버에 접속합니다.
      with:
        host: ${{ secrets.SSH_HOST }}  # 배포 서버의 호스트 주소를 GitHub 시크릿에서 가져옵니다.
        username: ${{ secrets.SSH_USERNAME }}  # 배포 서버의 사용자 이름을 GitHub 시크릿에서 가져옵니다.
        key: ${{ secrets.SSH_PRIVATE_KEY }}  # 배포 서버에 접근할 때 사용할 SSH 개인 키를 GitHub 시크릿에서 가져옵니다.
        port: ${{ secrets.SSH_PORT }}  # SSH 접속 포트를 지정합니다.
        script: |
          # 배포 서버에서 실행할 스크립트입니다.
          pkill -f 'java -jar /home/bottleiron_h/app/*.war' || true  # 기존에 실행 중인 Java 프로세스를 종료합니다. 프로세스가 없으면 무시합니다.
          nohup java -jar /home/bottleiron_h/app/*.war > app.log 2>&1 &  # 애플리케이션을 백그라운드에서 실행합니다. 로그는 app.log 파일로 리디렉션됩니다.
